from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import pandas as pd
import time

def scrape_tci_from_advance(university_name="‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡∏™‡∏á‡∏Ç‡∏•‡∏≤‡∏ô‡∏Ñ‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå", output_file="tci_psu_results.csv"):
    options = Options()
    # options.add_argument("--headless")  # ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÑ‡∏ß‡πâ‡∏î‡∏π‡∏Å‡πà‡∏≠‡∏ô
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")

    driver = webdriver.Chrome(options=options)
    wait = WebDriverWait(driver, 10)

    # 1. ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
    driver.get("https://search.tci-thailand.org/advance_search.html")

    # 2. ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á "‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏á‡∏≤‡∏ô"
    # ‡∏£‡∏≠‡πÉ‡∏´‡πâ input ‡πÇ‡∏´‡∏•‡∏î
    wait.until(EC.presence_of_element_located((By.NAME, "keyword[]")))
    search_input = driver.find_element(By.NAME, "keyword[]")

    # ‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢
    search_input.clear()
    search_input.send_keys(university_name)

    # ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
    wait.until(EC.element_to_be_clickable((By.ID, "searchBtn")))
    search_button = driver.find_element(By.ID, "searchBtn")
    search_button.click()

    # 4. ‡∏£‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    wait.until(EC.presence_of_element_located((By.CSS_SELECTOR, "div.result")))
    time.sleep(2)  # ‡πÉ‡∏´‡πâ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå

    results = []
    article_divs = driver.find_elements(By.CSS_SELECTOR, "div.result")

    for div in article_divs:
        title = div.find_element(By.CLASS_NAME, "title").text.strip() if div.find_elements(By.CLASS_NAME, "title") else ""
        journal = div.find_element(By.CLASS_NAME, "journal").text.strip() if div.find_elements(By.CLASS_NAME, "journal") else ""
        year = div.find_element(By.CLASS_NAME, "year").text.strip() if div.find_elements(By.CLASS_NAME, "year") else ""

        results.append({
            "title": title,
            "journal": journal,
            "year": year
        })

    print(f"‚úÖ ‡∏û‡∏ö {len(results)} ‡∏ö‡∏ó‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å {university_name}")

    driver.quit()

    # 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV
    df = pd.DataFrame(results)
    df.to_csv(output_file, index=False, encoding="utf-8-sig")
    print(f"üìÅ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà {output_file}")

if __name__ == "__main__":
    scrape_tci_from_advance()
