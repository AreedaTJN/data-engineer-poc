import streamlit as st
import pandas as pd
import psycopg2
from sqlalchemy import create_engine, text
import matplotlib.pyplot as plt

# ==== DATABASE CONNECTION ====
DB_USER = 'AreedaTJ'
DB_PASS = 'AreedaTJ'
DB_HOST = 'localhost'
DB_PORT = '5432'
DB_NAME = 'research_db'

engine = create_engine(f'postgresql://{DB_USER}:{DB_PASS}@{DB_HOST}:{DB_PORT}/{DB_NAME}')

def get_psycopg2_conn():
    return psycopg2.connect(
        dbname=DB_NAME,
        user=DB_USER,
        password=DB_PASS,
        host=DB_HOST,
        port=DB_PORT
    )

# ==== LOAD FILTER OPTIONS ====
@st.cache_data
def load_filter_data():
    conn = get_psycopg2_conn()
    try:
        years_df = pd.read_sql("SELECT DISTINCT output_year FROM articles ORDER BY output_year DESC", conn)
        sources_df = pd.read_sql("SELECT DISTINCT source_name FROM sources ORDER BY source_name", conn)
    finally:
        conn.close()
    return years_df['output_year'].tolist(), sources_df['source_name'].tolist()

years, sources = load_filter_data()

# ==== SIDEBAR FILTER ====
st.sidebar.header("üîç Filters")
selected_years = st.sidebar.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå", years, default=years)
selected_sources = st.sidebar.multiselect("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", sources, default=sources)

# ==== MAIN QUERY ====
@st.cache_data
def load_data(years, sources):
    placeholders_year = ','.join(['%s'] * len(years))
    placeholders_source = ','.join(['%s'] * len(sources))
    query = f"""
        SELECT a.article_name, a.author, a.output_year, a.journal, s.source_name
        FROM articles a
        JOIN sources s ON a.source_id = s.source_id
        WHERE a.output_year IN ({placeholders_year})
        AND s.source_name IN ({placeholders_source})
    """
    params = years + sources
    conn = get_psycopg2_conn()
    try:
        df = pd.read_sql(query, conn, params=params)
    finally:
        conn.close()
    return df

df = load_data(selected_years, selected_sources)

# ==== HEADER ====
st.title("PSU Research Dashboard")
st.markdown("‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• PostgreSQL")

# ==== SECTION 1: ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏£‡∏≤‡∏¢‡∏õ‡∏µ ====
st.subheader("‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏£‡∏≤‡∏¢‡∏õ‡∏µ")

yearly = df.groupby('output_year').size().reset_index(name='count')
fig, ax = plt.subplots()
ax.plot(yearly['output_year'], yearly['count'], marker='o')
ax.set_xlabel("‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡∏µ‡∏û‡∏¥‡∏°‡∏û‡πå")
ax.set_ylabel("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏á‡∏≤‡∏ô")
ax.set_title("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢‡∏£‡∏≤‡∏¢‡∏õ‡∏µ")
st.pyplot(fig)

# ==== SECTION 2: ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î ====
st.subheader("‡∏ú‡∏π‡πâ‡πÅ‡∏ï‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î")

authors = df['author'].dropna().str.split(';').explode().str.strip()
top_authors = authors.value_counts().reset_index()
top_authors.columns = ['author', 'num_articles']

st.dataframe(top_authors.head(10), use_container_width=True)

# ==== SECTION 3: ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ====
st.subheader("‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ß‡∏¥‡∏à‡∏±‡∏¢")
st.dataframe(df, use_container_width=True)